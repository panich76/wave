name: Wave Installer Check

on:
  push:
    branches:
      - main
      - 3.x
  pull_request:
    branches: [ main ]

jobs:
  test-installer:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
    
    - name: Create test directory
      run: mkdir test_install

    - name: Download tarball of current commit
      run: |
        TARBALL_URL=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                      -H "Accept: application/vnd.github.v3+json" \
                      https://api.github.com/repos/${{ github.repository }}/tarball/${{ github.sha }} \
                      -I | grep -i "location:" | cut -d " " -f 2 | tr -d '\r')
        curl -L -o wave.tar.gz $TARBALL_URL

    - name: Extract tarball to test directory
      run: tar -xzf wave.tar.gz -C test_install --strip-components=1

    - name: Debug - List contents of test directory
      run: |
        echo "Contents of test_install directory:"
        ls -la test_install
        echo "Contents of test_install/public directory (if it exists):"
        ls -la test_install/public || echo "Public directory not found"

    - name: Install Composer dependencies
      run: |
        cd test_install
        composer install --no-interaction --prefer-dist

    - name: Copy .env.example to .env
      run: |
        cd test_install
        cp .env.example .env

    - name: Generate application key
      run: |
        cd test_install
        php artisan key:generate

    - name: Run PHP built-in server
      run: |
        cd test_install
        php -S localhost:8000 -t public &
        echo $! > php_server.pid

    - name: Wait for server to start
      run: sleep 10

    - name: Check if installer page is accessible
      run: |
        response=$(curl -sS -o response.html -w "%{http_code}" http://localhost:8000)
        if [ $response -eq 200 ]; then
          echo "Installer page is accessible"
          cat response.html
        else
          echo "Installer page is not accessible. HTTP status code: $response"
          cat response.html
          exit 1
        fi

    - name: Debug - Check PHP error log
      if: failure()
      run: |
        echo "PHP Error Log:"
        cat /tmp/php_errors.log || echo "No PHP error log found"

    - name: Stop PHP server
      if: always()
      run: kill $(cat test_install/php_server.pid)

    - name: Check if .env file is created
      run: |
        if [ -f "test_install/.env" ]; then
          echo ".env file created successfully"
          cat test_install/.env
        else
          echo ".env file not created"
          exit 1
        fi

    - name: Check if application key is set
      run: |
        if grep -q "APP_KEY=" "test_install/.env"; then
          echo "Application key is set"
        else
          echo "Application key is not set"
          exit 1
        fi